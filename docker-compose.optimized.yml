version: '3.8'

x-common-variables: &common-variables
  DATABASE_URL: postgresql://logicuser:logicpass@postgres:5432/logicarena
  REDIS_URL: redis://redis:6379/0

x-python-service: &python-service
  restart: unless-stopped
  networks:
    - logic_network
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  deploy:
    resources:
      limits:
        memory: 512M
      reservations:
        memory: 256M

services:
  # API Gateway
  gateway:
    <<: *python-service
    build:
      context: ./gateway
      dockerfile: Dockerfile.optimized
      cache_from:
        - logicarena/gateway:latest
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      <<: *common-variables
      JWT_SECRET: ${JWT_SECRET:-production_secret_key}
      PROOF_CHECKER_URL: http://proof-checker:5003
      # Performance tuning
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      # Uvicorn workers based on CPU cores
      WEB_CONCURRENCY: ${WEB_CONCURRENCY:-4}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend with nginx caching
  front:
    build:
      context: ./front
      dockerfile: Dockerfile.optimized
      cache_from:
        - logicarena/front:latest
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - "3000:3000"
    environment:
      API_URL: ${API_URL:-http://localhost:8000}
      WS_URL: ${WS_URL:-ws://localhost:8000}
      NODE_ENV: production
    restart: unless-stopped
    networks:
      - logic_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Matchmaking Service
  match:
    <<: *python-service
    build:
      context: ./match
      dockerfile: Dockerfile.optimized
      cache_from:
        - logicarena/match:latest
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      <<: *common-variables
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1

  # Puzzle Service
  puzzle:
    <<: *python-service
    build:
      context: ./puzzle
      dockerfile: Dockerfile.optimized
      cache_from:
        - logicarena/puzzle:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      proof-checker:
        condition: service_healthy
    environment:
      <<: *common-variables
      PROOF_CHECKER_URL: http://proof-checker:5003
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1

  # Proof Checker Service
  proof-checker:
    build:
      context: ./proof-checker
      dockerfile: Dockerfile.optimized
      cache_from:
        - logicarena/proof-checker:latest
    ports:
      - "5003:5003"
    restart: unless-stopped
    networks:
      - logic_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1

  # Rating Service
  rating:
    <<: *python-service
    build:
      context: ./rating
      dockerfile: Dockerfile.optimized
      cache_from:
        - logicarena/rating:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      <<: *common-variables
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1

  # PostgreSQL Database with performance tuning
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: logicuser
      POSTGRES_PASSWORD: logicpass
      POSTGRES_DB: logicarena
      # Performance tuning
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --data-checksums"
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    restart: unless-stopped
    networks:
      - logic_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U logicuser -d logicarena"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=200
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  # Redis with persistence and performance tuning
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - logic_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --tcp-backlog 511
      --timeout 300
      --tcp-keepalive 60

  # Nginx reverse proxy for better performance
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - gateway
      - front
    restart: unless-stopped
    networks:
      - logic_network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  logic_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local